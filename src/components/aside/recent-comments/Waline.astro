<script>
  import { asideConfig, commentConfig } from '@/config';
  import { joinUrl } from '@utils/url-utils';
  import {
    cleanCommentHtml,
    createCommentItem,
    getTemplate,
  } from '../ResentCommentsCard.astro';

  async function setup() {
    const walineConfig = commentConfig.waline!;
    const commentCount = asideConfig.recentComment.count;
    const apiUrl = joinUrl(
      walineConfig.serverURL,
      `api/comment?type=recent&count=${commentCount}`
    );

    const response = await fetch(apiUrl, {
      method: 'GET',
    });
    if (!response.ok) {
      throw new Error('Failed to fetch recent comments');
    }

    const data: {
      nick: string;
      sticky: 0 | 1;
      status: string;
      link: string;
      comment: string;
      url: string;
      user_id: string;
      objectId: string;
      browser: string;
      os: string;
      type: string;
      label: string;
      avatar: string;
      orig: string;
      addr: string;
      like: number;
      time: number;
    }[] = (await response.json()).data;

    const { container, template } = getTemplate()!;
    if (container && !template) {
      // 说明已经加载完毕, 模板被删除了
      return;
    }

    data.forEach((item) =>
      createCommentItem(container, template!, {
        avatarUrl: item.avatar,
        commentContent: cleanCommentHtml(item.comment),
        commentUrl: `${item.url}#${item.objectId}`,
        author: item.nick,
        time: new Date(item.time),
      })
    );

    container.removeChild(template!);
  }

  document.addEventListener('astro:page-load', setup);
  await setup();
</script>
