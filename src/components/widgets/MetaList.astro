---
import MetaIcon from '@components/widgets/MetaIcon.astro';
import type { HTMLAttributes } from 'astro/types';

interface MetaInfo {
  text: string;
  link?: string;
  time?: Date;
}

interface MetaIconInfo {
  icon: string;
  title?: string;
}

export type MetaItem = (MetaIconInfo & (MetaInfo | { group: MetaInfo[] })) | undefined;

interface Props extends HTMLAttributes<'div'> {
  metas: MetaItem[];
}

const { metas, class: className, ...rest } = Astro.props;
---

{
  metas.filter((item) => Boolean(item)).length > 0 && (
    <div class:list={['flex flex-wrap gap-x-3 gap-y-2', className]} {...rest}>
      {metas.map((meta) => {
        return (
          meta && (
            <div class="flex flex-wrap items-center gap-1">
              <MetaIcon name={meta.icon} title={meta.title} aria-label={meta.title} />
              {(() => {
                const process = (info: MetaInfo) => {
                  const text = info.time ? (
                    <time datetime={info.time?.toISOString()}>{info.text}</time>
                  ) : (
                    <span>{info.text}</span>
                  );
                  return info.link ? (
                    <a href={info.link} title={info.text} class="link-hover not-hover:link">
                      {text}
                    </a>
                  ) : (
                    text
                  );
                };
                if ('group' in meta) {
                  return meta.group
                    .map(process)
                    .flatMap((item, index, arr) =>
                      index === arr.length - 1 ? [item] : [item, '/']
                    );
                }
                return process(meta);
              })()}
            </div>
          )
        );
      })}
    </div>
  )
}
