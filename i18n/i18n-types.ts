// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType & DisallowNamespaces
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'zh-CN'
	| 'zh-TW'

export type Translation = RootTranslation & DisallowNamespaces

export type Translations = RootTranslation &
{
	cli: NamespaceCliTranslation
}

type RootTranslation = {}

export type NamespaceCliTranslation = {
	'new': {
		prompt: {
			/**
			 * E​n​t​e​r​ ​t​h​e​ ​t​i​t​l​e​ ​o​f​ ​t​h​e​ ​n​e​w​ ​a​r​t​i​c​l​e​:
			 */
			title: string
			/**
			 * E​n​t​e​r​ ​t​h​e​ ​c​a​t​e​g​o​r​y​ ​f​o​r​ ​t​h​e​ ​a​r​t​i​c​l​e​ ​(​o​p​t​i​o​n​a​l​)​:
			 */
			category: string
			/**
			 * E​n​t​e​r​ ​t​a​g​s​ ​f​o​r​ ​t​h​e​ ​a​r​t​i​c​l​e​,​ ​c​o​m​m​a​-​s​e​p​a​r​a​t​e​d​ ​(​o​p​t​i​o​n​a​l​)​:
			 */
			tags: string
		}
		action: {
			/**
			 * E​x​i​t​ ​w​i​t​h​o​u​t​ ​c​r​e​a​t​i​n​g​ ​d​r​a​f​t
			 */
			exit: string
		}
		info: {
			/**
			 * S​u​c​c​e​s​s​f​u​l​l​y​ ​c​r​e​a​t​e​d​ ​a​r​t​i​c​l​e​:​ ​{​f​i​l​e​P​a​t​h​}
			 * @param {string} filePath
			 */
			success_created: RequiredParams<'filePath'>
			/**
			 * O​v​e​r​w​r​i​t​i​n​g​ ​e​x​i​s​t​i​n​g​ ​f​i​l​e​:​ ​{​f​i​l​e​P​a​t​h​}
			 * @param {string} filePath
			 */
			overwrite: RequiredParams<'filePath'>
		}
		error: {
			/**
			 * A​r​t​i​c​l​e​ ​t​i​t​l​e​ ​c​a​n​n​o​t​ ​b​e​ ​e​m​p​t​y​.
			 */
			no_title: string
		}
	}
	pub: {
		prompt: {
			/**
			 * S​e​l​e​c​t​ ​t​h​e​ ​d​r​a​f​t​ ​t​o​ ​p​u​b​l​i​s​h​:
			 */
			select: string
		}
		action: {
			/**
			 * E​x​i​t​ ​w​i​t​h​o​u​t​ ​p​u​b​l​i​s​h​i​n​g
			 */
			exit: string
		}
		info: {
			/**
			 * N​o​ ​d​r​a​f​t​s​ ​f​o​u​n​d​ ​t​o​ ​p​u​b​l​i​s​h​.
			 */
			no_drafts_found: string
			/**
			 * S​u​c​c​e​s​s​f​u​l​l​y​ ​p​u​b​l​i​s​h​e​d​ ​'​{​s​o​u​r​c​e​}​'​ ​t​o​ ​'​{​d​e​s​t​i​n​a​t​i​o​n​}​'​.
			 * @param {string} destination
			 * @param {string} source
			 */
			success_article_published: RequiredParams<'destination' | 'source'>
			/**
			 * C​l​e​a​n​e​d​ ​u​p​ ​e​m​p​t​y​ ​s​o​u​r​c​e​ ​d​i​r​e​c​t​o​r​y​:​ ​{​d​i​r​P​a​t​h​}
			 * @param {string} dirPath
			 */
			info_empty_dir_removed: RequiredParams<'dirPath'>
			/**
			 * P​u​b​l​i​s​h​ ​o​p​e​r​a​t​i​o​n​ ​c​a​n​c​e​l​l​e​d​.
			 */
			publish_cancelled: string
		}
		error: {
			/**
			 * E​r​r​o​r​ ​p​u​b​l​i​s​h​i​n​g​ ​a​r​t​i​c​l​e​:​ ​{​m​e​s​s​a​g​e​}
			 * @param {string} message
			 */
			publish_article: RequiredParams<'message'>
		}
	}
	prompt: {
		/**
		 * F​i​l​e​ ​{​f​i​l​e​P​a​t​h​}​ ​a​l​r​e​a​d​y​ ​e​x​i​s​t​s​.​ ​C​h​o​o​s​e​ ​a​n​ ​a​c​t​i​o​n​:
		 * @param {string} filePath
		 */
		file_exists: RequiredParams<'filePath'>
		/**
		 * E​n​t​e​r​ ​a​ ​n​e​w​ ​n​a​m​e​ ​f​o​r​ ​t​h​e​ ​f​i​l​e​ ​(​w​i​t​h​o​u​t​ ​e​x​t​e​n​s​i​o​n​)​:
		 */
		enter_new_name: string
	}
	action: {
		/**
		 * R​e​n​a​m​e​ ​t​h​e​ ​f​i​l​e
		 */
		rename: string
		/**
		 * O​v​e​r​w​r​i​t​e​ ​t​h​e​ ​e​x​i​s​t​i​n​g​ ​f​i​l​e
		 */
		overwrite: string
	}
	info: {
		/**
		 * O​p​e​r​a​t​i​o​n​ ​c​a​n​c​e​l​l​e​d​ ​b​y​ ​u​s​e​r​.
		 */
		cancelled_by_user: string
	}
	error: {
		/**
		 * A​n​ ​u​n​e​x​p​e​c​t​e​d​ ​e​r​r​o​r​ ​o​c​c​u​r​r​e​d​:​ ​{​m​e​s​s​a​g​e​}
		 * @param {string} message
		 */
		unexpected: RequiredParams<'message'>
		/**
		 * A​n​ ​e​r​r​o​r​ ​o​c​c​u​r​r​e​d​:​ ​{​m​e​s​s​a​g​e​}
		 * @param {string} message
		 */
		generic: RequiredParams<'message'>
		/**
		 * F​i​l​e​ ​a​l​r​e​a​d​y​ ​e​x​i​s​t​s​:​ ​{​f​i​l​e​P​a​t​h​}
		 * @param {string} filePath
		 */
		file_exists: RequiredParams<'filePath'>
		/**
		 * E​r​r​o​r​ ​c​r​e​a​t​i​n​g​ ​f​i​l​e​:​ ​{​m​e​s​s​a​g​e​}
		 * @param {string} message
		 */
		create_file: RequiredParams<'message'>
		/**
		 * F​i​l​e​ ​n​a​m​e​ ​c​a​n​n​o​t​ ​b​e​ ​e​m​p​t​y​.
		 */
		empty_filename: string
		/**
		 * C​a​n​n​o​t​ ​r​e​n​a​m​e​ ​t​o​ ​o​r​i​g​i​n​a​l​ ​f​i​l​e​ ​n​a​m​e​:​ ​{​f​i​l​e​N​a​m​e​}
		 * @param {string} fileName
		 */
		rename_to_original_conflict: RequiredParams<'fileName'>
	}
}

export type Namespaces =
	| 'cli'

type DisallowNamespaces = {
	/**
	 * reserved for 'cli'-namespace\
	 * you need to use the `./cli/index.ts` file instead
	 */
	cli?: "[typesafe-i18n] reserved for 'cli'-namespace. You need to use the `./cli/index.ts` file instead."
}

export type TranslationFunctions = {
	cli: {
		'new': {
			prompt: {
				/**
				 * Enter the title of the new article:
				 */
				title: () => LocalizedString
				/**
				 * Enter the category for the article (optional):
				 */
				category: () => LocalizedString
				/**
				 * Enter tags for the article, comma-separated (optional):
				 */
				tags: () => LocalizedString
			}
			action: {
				/**
				 * Exit without creating draft
				 */
				exit: () => LocalizedString
			}
			info: {
				/**
				 * Successfully created article: {filePath}
				 */
				success_created: (arg: { filePath: string }) => LocalizedString
				/**
				 * Overwriting existing file: {filePath}
				 */
				overwrite: (arg: { filePath: string }) => LocalizedString
			}
			error: {
				/**
				 * Article title cannot be empty.
				 */
				no_title: () => LocalizedString
			}
		}
		pub: {
			prompt: {
				/**
				 * Select the draft to publish:
				 */
				select: () => LocalizedString
			}
			action: {
				/**
				 * Exit without publishing
				 */
				exit: () => LocalizedString
			}
			info: {
				/**
				 * No drafts found to publish.
				 */
				no_drafts_found: () => LocalizedString
				/**
				 * Successfully published '{source}' to '{destination}'.
				 */
				success_article_published: (arg: { destination: string, source: string }) => LocalizedString
				/**
				 * Cleaned up empty source directory: {dirPath}
				 */
				info_empty_dir_removed: (arg: { dirPath: string }) => LocalizedString
				/**
				 * Publish operation cancelled.
				 */
				publish_cancelled: () => LocalizedString
			}
			error: {
				/**
				 * Error publishing article: {message}
				 */
				publish_article: (arg: { message: string }) => LocalizedString
			}
		}
		prompt: {
			/**
			 * File {filePath} already exists. Choose an action:
			 */
			file_exists: (arg: { filePath: string }) => LocalizedString
			/**
			 * Enter a new name for the file (without extension):
			 */
			enter_new_name: () => LocalizedString
		}
		action: {
			/**
			 * Rename the file
			 */
			rename: () => LocalizedString
			/**
			 * Overwrite the existing file
			 */
			overwrite: () => LocalizedString
		}
		info: {
			/**
			 * Operation cancelled by user.
			 */
			cancelled_by_user: () => LocalizedString
		}
		error: {
			/**
			 * An unexpected error occurred: {message}
			 */
			unexpected: (arg: { message: string }) => LocalizedString
			/**
			 * An error occurred: {message}
			 */
			generic: (arg: { message: string }) => LocalizedString
			/**
			 * File already exists: {filePath}
			 */
			file_exists: (arg: { filePath: string }) => LocalizedString
			/**
			 * Error creating file: {message}
			 */
			create_file: (arg: { message: string }) => LocalizedString
			/**
			 * File name cannot be empty.
			 */
			empty_filename: () => LocalizedString
			/**
			 * Cannot rename to original file name: {fileName}
			 */
			rename_to_original_conflict: (arg: { fileName: string }) => LocalizedString
		}
	}
}

export type Formatters = {}
